#
# Configuration suitable for operation with a ring buffer
#
# See ringbuffer.sh for an example setup of realtime processing 
# using digital rf ringbuffer
#
[config]

# specify that processing occurs on a live ringbuffer
# that continuously gets added more measurements by
# the recorder (and old files are removed to keep buffer a constant size)
# this requires the processing to sometimes wait for more data
realtime=true

# recording settings and data directory
channel="cha"
sample_rate=25000000.0
center_freq=12.5e6
# use ram disk
data_dir="/dev/shm/hf25"

# detection
threshold_snr=13.0
max_simultaneous_detections=5
# this needs to be tuned to be large enough that the
# detection processing is realtime
# if we cannot keep up with real-time, we need to skip more
step=6
n_samples_per_block=5000000
minimum_frequency_spacing=0.2e6
chirp_rates=[50e3,100e3,125e3]
output_dir="/data0/chirp_fast"

# ionogram calc
range_resolution=2e3
frequency_resolution=50e3
max_range_extent=2000e3
# this should be only large enough that the chirp calculation
# is performed in real-time
n_downconversion_threads=2
decimation=1250

# display the detected ionograms
plot_timings=false
debug_timings=false
#
# ionogram analysis in realtime mode is done only using known sounding
# timings.
#
# you can figure out sounder timings by carefully analyzing the output
# of find_timings.py
# 
# the configuration is a list of lists
# Each list is one MPI process
#   - each list within a list
#     contains dictionaries with chirp parameters that this
#     process is calculating
#
# E.g., when you run with
# mpirun -np 2 python calc_ionograms.py ringbuffer.ini
# you will use two processes to calculate ionograms.
# process #1 will go through the first list, and process #2 
# will go through the second list.
# 
sounder_timings=[[{"chirp-rate":500.0084e3,"rep":60.0,"chirpt":54.0016,"id":42}]]

# a selection of 100 kHz/s and 50 kHz/s sounders
#sounder_timings=[[
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":235.0136,"id":1},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":540.0136,"id":2},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":860.0160,"id":5},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":1180.0103,"id":4},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":1480.0103,"id":4},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":2080.0103,"id":4},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":2380.0103,"id":4},
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":2700.0136,"id":0},      
#      {"chirp-rate":100e3,"rep":3600.0,"chirpt":2935.0136,"id":1},
#      {"chirp-rate":50e3,"rep":3600.0,"chirpt":3260.0166,"id":6}      
#   ],
#   [
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":0.0136,"id":0},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":388.0221,"id":3},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":835.0136,"id":1},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":1140.0136,"id":2},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":1440.0136,"id":2},
#    {"chirp-rate":50e3,"rep":3600.0,"chirpt":1760.0166,"id":6},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":2335.0136,"id":1},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":2660.0160,"id":5},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":2980.0103,"id":4},
#    {"chirp-rate":100e3,"rep":3600.0,"chirpt":3280.0103,"id":4}    
#   ]
# ]

# jorn
#sounder_timings=[[
#      {"chirp-rate":125e3,"rep":450.0,"chirpt":17.0486,"id":7},
#      {"chirp-rate":125e3,"rep":450.0,"chirpt":377.0482,"id":11}
#   ],
#   [
#    {"chirp-rate":125e3,"rep":450.0,"chirpt":107.0476,"id":8},
#    {"chirp-rate":125e3,"rep":450.0,"chirpt":287.0481,"id":10}
#   ]
# ]

		 
		 
		 
		 